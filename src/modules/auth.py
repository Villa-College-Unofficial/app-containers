from fastapi import Request
from fastapi.responses import RedirectResponse
from starlette.middleware.base import BaseHTTPMiddleware
from nicegui import app, ui
import ldap
from modules.config import current_config
from typing import Optional

unrestricted_page_routes = {'/login'}

class AuthMiddleware(BaseHTTPMiddleware):
    """This middleware restricts access to all NiceGUI pages.

    It redirects the user to the login page if they are not authenticated.
    """

    async def dispatch(self, request: Request, call_next):
        if not app.storage.user.get('authenticated', False):
            if not request.url.path.startswith('/_nicegui') and request.url.path not in unrestricted_page_routes:
                app.storage.user['referrer_path'] = request.url.path  # remember where the user wanted to go
                return RedirectResponse('/login')
        return await call_next(request)

app.add_middleware(AuthMiddleware)

@ui.page('/')
def login_view() -> None:
    def logout() -> None:
        app.storage.user.clear()
        ui.navigate.to('/login')

    ui.navigate.to('/apps')

@ui.page("/login")
def login() -> Optional[RedirectResponse]:
    ui.page_title(f"Login - {current_config.title()}")
    upn = current_config.ldap_upn()
    username = None
    password = None

    def try_login() -> None:
        if (not username.value) or (not (username.value.endswith('@students.villacollege.edu.mv') or username.value.endswith('@villacollege.edu.mv'))):
            app.storage.user.update({ 'username': username.value, 'authenticated': False })
            return ui.notify('Wrong username or password', color='negative')

        try:
            l = ldap.initialize(current_config.ldap_server())
            l.protocol_version = current_config.ldap_protocol()
            l.set_option(ldap.OPT_REFERRALS, 0)
            l.simple_bind_s(username.value, password.value)

            app.storage.user.update({ 'username': username.value, 'authenticated': True })
            ui.navigate.to(app.storage.user.get('referrer_path', '/'))
        except:
            app.storage.user.update({ 'username': username.value, 'authenticated': False })
            ui.notify('Wrong username or password', color='negative')

    if app.storage.user.get('authenticated', False):
        return RedirectResponse('/')
    with ui.card().classes('absolute-center content-center'):
        ui.html("""
            <svg xmlns="http://www.w3.org/2000/svg" :class="{ 'w-14 md:w-12 mr-12': !scrolAtTop, 'w-14 md:w-24': scrolAtTop }" fill="none" viewBox="0 0 43 44"><rect fill="none" height="43" rx="12" width="44"></rect><path clip-rule="evenodd" d="M16.7032 7.17865C17.6068 7.21789 18.6802 7.0495 19.9476 6.83071C20.8633 6.66805 21.5909 6.6062 22.3306 6.61738C23.0705 6.63427 23.7922 6.72391 24.7017 6.88113C25.8843 7.0833 26.891 7.22934 27.7519 7.16749C28.5525 7.11708 29.2315 6.88685 29.8199 6.35366L30.214 6L30.5295 6.42669L34.3011 11.5461L34.5436 11.8775L34.277 12.1804C32.9431 13.713 33.0823 14.3025 33.3857 15.588C33.5614 16.3402 33.7857 17.3059 33.8646 18.7205C33.9011 19.3156 33.889 19.8657 33.8222 20.4101C33.7554 20.9602 33.6282 21.4992 33.4219 22.083C32.2334 25.4568 29.6803 26.8264 26.5454 28.5106C25.2535 29.201 23.8649 29.9476 22.4397 30.9132L22.1731 31.0928L21.9061 30.9132C20.4812 29.9476 19.0926 29.2011 17.807 28.5106C14.6655 26.8265 12.1187 25.4568 10.9302 22.083C10.7241 21.4991 10.5967 20.9602 10.524 20.4101C10.4572 19.8657 10.4513 19.3156 10.4816 18.7205C10.5602 17.3059 10.7907 16.3403 10.9667 15.588C11.2698 14.3025 11.4032 13.7131 10.0693 12.1804L9.8023 11.8775L10.0448 11.5461L13.8167 6.42669L14.132 6L14.5264 6.35366C15.1448 6.90923 15.8544 7.13373 16.7033 7.17872" fill="white" fill-rule="evenodd"></path> <path d="M16.7032 7.17865C17.6068 7.21789 18.6802 7.0495 19.9476 6.83071C20.8633 6.66805 21.5909 6.6062 22.3306 6.61738C23.0705 6.63427 23.7922 6.72391 24.7017 6.88113C25.8843 7.0833 26.891 7.22934 27.7519 7.16749C28.5525 7.11708 29.2315 6.88685 29.8199 6.35366L30.214 6L30.5295 6.42669L34.3011 11.5461L34.5436 11.8775L34.277 12.1804C32.9431 13.713 33.0823 14.3025 33.3857 15.588C33.5614 16.3402 33.7857 17.3059 33.8646 18.7205C33.9011 19.3156 33.889 19.8657 33.8222 20.4101C33.7554 20.9602 33.6282 21.4992 33.4219 22.083C32.2334 25.4568 29.6803 26.8264 26.5454 28.5106C25.2535 29.201 23.8649 29.9476 22.4397 30.9132L22.1731 31.0928L21.9061 30.9132C20.4812 29.9476 19.0926 29.2011 17.807 28.5106C14.6655 26.8265 12.1187 25.4568 10.9302 22.083C10.7241 21.4991 10.5967 20.9602 10.524 20.4101C10.4572 19.8657 10.4513 19.3156 10.4816 18.7205C10.5602 17.3059 10.7907 16.3403 10.9667 15.588C11.2698 14.3025 11.4032 13.7131 10.0693 12.1804L9.8023 11.8775L10.0448 11.5461L13.8167 6.42669L14.132 6L14.5264 6.35366C15.1448 6.90923 15.8544 7.13373 16.7033 7.17872L16.7032 7.17865ZM20.1172 7.81303C18.7892 8.04899 17.6613 8.22309 16.6608 8.17242C15.7755 8.13318 14.9993 7.91984 14.3017 7.43703L11.0638 11.827C12.4522 13.522 12.2765 14.2743 11.9127 15.8182C11.7428 16.5312 11.5306 17.4404 11.4579 18.7709C11.4276 19.3156 11.4335 19.8096 11.4941 20.2867C11.5547 20.7638 11.6639 21.2354 11.8458 21.7463C12.9072 24.7552 15.3025 26.0407 18.2556 27.6292C19.4868 28.2861 20.8027 28.9935 22.1731 29.8973C23.5436 28.9935 24.8657 28.2861 26.0904 27.6292C29.0438 26.0407 31.4449 24.7552 32.5063 21.7463C32.6823 21.2354 32.7974 20.7638 32.858 20.2867C32.9186 19.8096 32.9248 19.3156 32.8942 18.7709C32.8156 17.4404 32.6034 16.5313 32.4336 15.8182C32.0757 14.2743 31.9 13.522 33.2886 11.827L30.0504 7.43703C29.3834 7.8975 28.6435 8.11057 27.8129 8.1667C26.8607 8.22855 25.7873 8.08251 24.5381 7.86916C23.671 7.71767 22.9855 7.62775 22.3185 7.61659C21.6454 7.60542 20.9725 7.66154 20.1172 7.81304" fill="#03247A"></path> <path clip-rule="evenodd" d="M21.9121 11.6638L17.5095 18.7144H26.278L21.9121 11.6638Z" fill="#03247A" fill-rule="evenodd"></path> <path clip-rule="evenodd" d="M22.3189 11.1078L27.1218 18.647L31.8579 11.0743L22.3189 11.1078Z" fill="#2EABE1" fill-rule="evenodd"></path> <path clip-rule="evenodd" d="M17.5464 19.3942L22.1186 26.6582L26.7397 19.3942H17.5464Z" fill="#2EABE1" fill-rule="evenodd"></path> <path clip-rule="evenodd" d="M10.5306 29.8267C10.2445 29.8254 10.1237 30.1065 10.1237 30.1213L10.0872 31.7213C9.07463 31.1486 8.30445 30.7334 7.12208 30.6884C6.41865 30.6827 6.26078 30.6996 6 30.7669L6.89159 31.4631L7.92237 32.6083L6.16373 34.2136L8.16494 34.3261L10.9484 35.2859C11.8944 35.6284 16.5637 37.6437 17.0671 36.9363L17.2489 36.6838L17.3399 36.0718C17.9644 36.1225 20.2688 36.4086 21.9669 36.4086C23.6711 36.4086 26.0845 36.1167 26.7091 36.0606L26.6906 36.6838L26.8725 36.9363C27.3759 37.6436 32.039 35.6284 32.9911 35.2859L35.8352 34.3261L37.8364 34.2136L36.0778 32.6083L37.1085 31.4631L38 30.7669C37.7392 30.6996 37.5756 30.6827 36.8783 30.6884C35.6894 30.7334 34.8771 31.1655 33.8522 31.7213L33.8158 30.1213C33.8158 30.1044 33.6581 29.7396 33.276 29.8462L26.921 31.5864C23.7497 32.4567 20.1901 32.4567 17.0187 31.5864L10.6634 29.8462C10.6156 29.8328 10.5715 29.8269 10.5306 29.8267ZM13.2472 32.4582L13.5275 32.5093L13.7488 34.0592L14.5611 32.6891L14.8413 32.7404L13.996 34.1594C13.948 34.2414 13.9059 34.2983 13.87 34.3305C13.8158 34.379 13.7561 34.3973 13.6911 34.3851C13.6228 34.3725 13.5727 34.3414 13.5415 34.2913C13.5139 34.2504 13.4944 34.1867 13.4827 34.0995L13.2472 32.4582ZM30.7709 32.4914L30.8204 32.7313L30.692 32.7541C30.4322 32.8015 30.2488 32.898 30.1422 33.044C30.0684 33.1481 30.0284 33.2519 30.0222 33.3557L30.0198 33.3906L30.9346 33.2261L30.9841 33.4637L30.0587 33.6293C30.1087 33.7753 30.2015 33.8883 30.3366 33.9682C30.4096 34.0104 30.4926 34.039 30.5862 34.0543C30.6668 34.0668 30.7383 34.0674 30.8004 34.0565L31.0947 34.0031L31.1454 34.2429L30.9357 34.2799C30.6429 34.333 30.3866 34.2927 30.167 34.1589C29.9528 34.0281 29.8185 33.8379 29.7643 33.5878C29.7101 33.3467 29.7602 33.1225 29.9138 32.9154C30.0675 32.7083 30.2747 32.5814 30.5355 32.534L30.7709 32.4914ZM15.2365 32.7606L15.5273 32.8086L15.1918 34.5719L14.901 34.524L15.2365 32.7606ZM15.821 32.8788L16.1024 32.9203L15.9057 34.0734C15.8813 34.2137 15.9039 34.3215 15.974 34.397C16.0084 34.4348 16.0512 34.4629 16.1024 34.4809C16.133 34.4913 16.1866 34.5021 16.2637 34.5136L16.6121 34.5649L16.5722 34.7991L16.1259 34.7338C15.9884 34.7134 15.8739 34.6607 15.7821 34.5757C15.7003 34.5002 15.6482 34.4153 15.6255 34.3208C15.6058 34.2388 15.6062 34.1376 15.6268 34.0177L15.821 32.8788ZM28.6658 32.9283C28.7081 32.9283 28.7482 32.9307 28.7862 32.9356C28.9549 32.9569 29.1244 33.0228 29.2948 33.134L29.1429 33.34C28.9004 33.1955 28.6796 33.1424 28.4812 33.1808C28.2504 33.2244 28.0827 33.3351 27.9785 33.5122C27.892 33.6621 27.8661 33.8179 27.9008 33.9797C27.9432 34.1767 28.0542 34.3272 28.2341 34.431C28.3933 34.5234 28.5572 34.5582 28.7261 34.5356C28.908 34.5103 29.0608 34.4299 29.1841 34.2947C29.3072 34.159 29.3548 34.0125 29.3265 33.8555L28.652 33.9655L28.6072 33.7291L29.5714 33.571C29.5776 33.598 29.5835 33.6245 29.5891 33.6506C29.6462 33.9553 29.5859 34.2139 29.4078 34.4267C29.2445 34.6206 29.0263 34.7345 28.7531 34.7677C28.4871 34.7982 28.2452 34.7434 28.028 34.6031C27.8114 34.4631 27.6783 34.2716 27.6288 34.0288C27.5747 33.776 27.6253 33.5443 27.7807 33.3334C27.9367 33.1228 28.1555 32.9945 28.4365 32.9487C28.5189 32.9351 28.5953 32.9283 28.6658 32.9283ZM27.3104 33.117L27.3422 33.3599L27.2115 33.3752C26.9493 33.4052 26.7594 33.4894 26.6416 33.6281C26.5598 33.727 26.5121 33.8281 26.498 33.931L26.4922 33.966L27.4164 33.8602L27.4482 34.1L26.5122 34.2068C26.5522 34.355 26.6363 34.4739 26.7653 34.5633C26.835 34.609 26.916 34.6428 27.0078 34.6646C27.0879 34.6828 27.1588 34.6883 27.2209 34.6809L27.5188 34.6471L27.5505 34.8891L27.3397 34.913C27.0436 34.9465 26.7912 34.8896 26.5817 34.7419C26.3774 34.5975 26.2579 34.3986 26.2226 34.1458C26.1873 33.9025 26.2538 33.6824 26.4227 33.4854C26.5923 33.2886 26.8082 33.1747 27.0714 33.1442L27.3104 33.117ZM16.9564 33.1425L17.2389 33.1752L17.0859 34.3337C17.0671 34.4748 17.0945 34.5822 17.1684 34.6564C17.2037 34.6929 17.2472 34.719 17.299 34.7348C17.3296 34.7444 17.3838 34.7533 17.4615 34.762L17.8112 34.8023L17.7806 35.0377L17.332 34.9866C17.1945 34.9705 17.0783 34.9217 16.9835 34.8405C16.8979 34.768 16.8422 34.6843 16.8163 34.5898C16.7928 34.5086 16.7892 34.4076 16.8057 34.2868L16.9564 33.1425ZM18.6636 33.2742C18.6861 33.2739 18.7089 33.2745 18.7322 33.2762C18.9447 33.2915 19.1089 33.3664 19.2242 33.5008C19.3481 33.6455 19.4002 33.8458 19.3808 34.1014L19.3032 35.1367L19.0194 35.1181L19.0795 34.3291L18.3425 34.2811L18.3602 34.037L19.0876 34.0839L19.1006 33.9171C19.1082 33.8141 19.0771 33.7228 19.0065 33.6436C18.9358 33.5637 18.8464 33.5209 18.7381 33.5149C18.5945 33.5084 18.4837 33.5444 18.406 33.6229C18.3407 33.6913 18.3039 33.7821 18.2954 33.8954L18.207 35.0658L17.9327 35.0473L18.0198 33.8898C18.0346 33.6975 18.1106 33.5438 18.2471 33.4288C18.3671 33.3277 18.5061 33.2763 18.6636 33.2742ZM25.2924 33.372L25.3795 34.5361C25.3904 34.6778 25.4396 34.7789 25.5267 34.8391C25.5691 34.8691 25.6174 34.8871 25.6716 34.8936C25.7036 34.8974 25.7586 34.8966 25.8363 34.8914L26.1895 34.8685L26.2072 35.105L25.7551 35.1344C25.6168 35.1431 25.4925 35.1159 25.3818 35.0527C25.2844 34.996 25.2135 34.9238 25.1688 34.8358C25.1287 34.7603 25.1044 34.6619 25.0958 34.5404L25.0087 33.3906L25.2924 33.372ZM21.21 33.4298C21.2267 33.4297 21.2436 33.4299 21.2606 33.4304L21.4855 33.4381L21.476 33.6822L21.23 33.6735C21.0337 33.6669 20.8629 33.7252 20.7178 33.8478C20.5733 33.9698 20.4977 34.1246 20.4907 34.3121C20.4836 34.5004 20.5487 34.6565 20.6861 34.7807C20.8171 34.9001 20.9845 34.9628 21.1888 34.9693L21.4278 34.978L21.4184 35.2244L21.1794 35.2156C20.8936 35.2069 20.6578 35.114 20.4718 34.9367C20.2864 34.7595 20.1987 34.547 20.2081 34.2991C20.2175 34.0522 20.3288 33.8422 20.5425 33.6691C20.7368 33.5118 20.9591 33.432 21.21 33.4298ZM22.6624 33.5053C22.9361 33.5053 23.1739 33.598 23.3758 33.7832C23.5783 33.9685 23.6796 34.1861 23.6796 34.4351C23.6796 34.6874 23.5789 34.9031 23.3782 35.0824C23.178 35.262 22.9394 35.3516 22.6624 35.3516C22.386 35.3516 22.1479 35.2628 21.9477 35.0846C21.7482 34.9066 21.6469 34.6923 21.644 34.4416C21.6407 34.183 21.7393 33.9626 21.9395 33.78C22.1402 33.5969 22.3813 33.5053 22.6624 33.5053ZM24.1233 33.5155L24.1892 34.6817C24.1977 34.8234 24.2445 34.9245 24.3292 34.9847C24.3716 35.0147 24.4193 35.0335 24.4729 35.0414C24.5058 35.0458 24.5612 35.0463 24.6389 35.0425L24.9921 35.0251L25.005 35.2626L24.5529 35.2845C24.414 35.291 24.2905 35.2616 24.1822 35.1962C24.0856 35.1381 24.0153 35.0649 23.9714 34.9761C23.9329 34.9006 23.9105 34.8022 23.9043 34.6807L23.8384 33.5286L24.1233 33.5155ZM22.6448 33.7474C22.4484 33.7474 22.281 33.8149 22.1421 33.95C22.0032 34.0851 21.9337 34.2454 21.9337 34.4307C21.9337 34.6159 22.0037 34.7756 22.1444 34.9091C22.2848 35.0429 22.454 35.1105 22.6518 35.1119C22.8502 35.1149 23.0209 35.0505 23.164 34.9189C23.3067 34.7876 23.3806 34.6291 23.3853 34.4438C23.3883 34.2528 23.3184 34.0891 23.1757 33.9523C23.0326 33.8158 22.8558 33.7474 22.6448 33.7474Z" fill="#03247A" fill-rule="evenodd"></path><path clip-rule="evenodd" d="M16.9643 18.294L21.5367 11.1142L12.4885 11.1477L16.9643 18.294Z" fill="#2EABE1" fill-rule="evenodd"></path> </svg>
        """).classes('w-full bg-transparent')
        username = ui.input('Username').classes('w-full text-center').on('keydown.enter', try_login)
        password = ui.input('Password', password=True, password_toggle_button=True).classes('w-full text-center').on('keydown.enter', try_login)
        ui.button('Log in', on_click=try_login).classes('self-center')
    return None